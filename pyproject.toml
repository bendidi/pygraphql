[tool.poetry]
name = "pygraphql-async"
version = "0.1.0"
description = "Async graphql client"
authors = ["Ouail <ouail.bendidi@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/bendidi/pygraphql"
homepage = "https://github.com/bendidi/pygraphql"
documentation = "https://github.com/bendidi/pygraphql"
keywords = ["graphql", "client", "async"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]
packages = [
    { include = "pygraphql" },
]

[tool.poetry.dependencies]
python = "^3.6.1"
httpx = "=0.16.1"
trio = { version = "^0.17.0", optional = true }

[tool.poetry.dev-dependencies]
black = "^20.8b1"
bandit = "^1.6.2"
flake8-import-order = "^0.18.1"
safety = "^1.9.0"
mypy = "^0.782"
pytest = "^6.0.2"
pytest-cov = "^2.10.1"
coverage = {extras = ["toml"], version = "^5.3"}
pytest-icdiff = "^0.5"
pygments = "^2.7.1"
respx = "=0.13.0"
pytest-asyncio = "^0.14.0"
pytest-trio = "^0.6.0"
coloredlogs = "^14.0"
pre-commit = "^2.7.1"
isort = "^5.6.4"
pylint = "^2.6.0"
nox = "^2020.8.22"

[tool.poetry.extras]
trio = ["trio"]

[tool.coverage.paths]
source = ["pygraphql"]

[tool.coverage.run]
branch = true
source = ["pygraphql"]

[tool.coverage.report]
show_missing = true
fail_under = 70

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -vv --cov=pygraphql --cov-report=term"
testpaths = [
    "tests"
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
line_length=88
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
known_myself = "pygraphql"
known_third_party = "trio,httpx,graphql"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "MYSELF", "LOCALFOLDER"]


[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
